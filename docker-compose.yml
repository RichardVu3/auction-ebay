services:
  ### DATABASES
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d/:ro
    ports:
      - "5433:5432" # Optional: Map to host port 5433
    networks:
      - app-network

  rabbitmq:
    image: masstransit/rabbitmq
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672" # RabbitMQ main port
      - "15672:15672" # RabbitMQ management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  ### APIS
  auction-service:
    build:
      context: ./auction-service
      dockerfile: Dockerfile
    container_name: auction-service
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres-db:5432/auction_service_db"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672" # Use container name
      RABBITMQ_HOST: "guest:guest@rabbitmq"
      ADMIN_USERID: "c1bba5c0-b001-7085-7a2e-e74d5399c3d1"
    depends_on:
      - postgres-db
    networks:
      - app-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "4001:4001"
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres-db:5432/notification_service_db"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672" # Use container name
    depends_on:
      - postgres-db
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "42069:42069" # API Gateway exposed on port 3000
    environment:
      DATABASE_URL: ""
      DEV: "false"
    depends_on:
      - auction-service
      - notification-service
      - postgres-db
    networks:
      - app-network

  user-service:
    build:
      context: ./userService
    container_name: user-service
    depends_on:
      - postgres-db
    ports:
      - 8080:8080
    entrypoint:
      ["java", "-jar", "-Dspring.profiles.active=docker", "application.jar"]
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  initdb:
