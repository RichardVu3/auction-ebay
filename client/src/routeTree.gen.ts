/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardWatchlistImport } from './routes/dashboard/watchlist'
import { Route as DashboardSummaryImport } from './routes/dashboard/summary'
import { Route as DashboardSellImport } from './routes/dashboard/sell'
import { Route as AuctionsAuctionIdImport } from './routes/auctions/$auctionId'
import { Route as DashboardAuctionsIndexImport } from './routes/dashboard/auctions.index'
import { Route as AuctionsAuctionIdIndexImport } from './routes/auctions/$auctionId.index'
import { Route as AuctionsAuctionIdEditImport } from './routes/auctions/$auctionId.edit'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardWatchlistRoute = DashboardWatchlistImport.update({
  id: '/watchlist',
  path: '/watchlist',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSummaryRoute = DashboardSummaryImport.update({
  id: '/summary',
  path: '/summary',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSellRoute = DashboardSellImport.update({
  id: '/sell',
  path: '/sell',
  getParentRoute: () => DashboardRoute,
} as any)

const AuctionsAuctionIdRoute = AuctionsAuctionIdImport.update({
  id: '/auctions/$auctionId',
  path: '/auctions/$auctionId',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAuctionsIndexRoute = DashboardAuctionsIndexImport.update({
  id: '/auctions/',
  path: '/auctions/',
  getParentRoute: () => DashboardRoute,
} as any)

const AuctionsAuctionIdIndexRoute = AuctionsAuctionIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuctionsAuctionIdRoute,
} as any)

const AuctionsAuctionIdEditRoute = AuctionsAuctionIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => AuctionsAuctionIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/auctions/$auctionId': {
      id: '/auctions/$auctionId'
      path: '/auctions/$auctionId'
      fullPath: '/auctions/$auctionId'
      preLoaderRoute: typeof AuctionsAuctionIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/sell': {
      id: '/dashboard/sell'
      path: '/sell'
      fullPath: '/dashboard/sell'
      preLoaderRoute: typeof DashboardSellImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/summary': {
      id: '/dashboard/summary'
      path: '/summary'
      fullPath: '/dashboard/summary'
      preLoaderRoute: typeof DashboardSummaryImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/watchlist': {
      id: '/dashboard/watchlist'
      path: '/watchlist'
      fullPath: '/dashboard/watchlist'
      preLoaderRoute: typeof DashboardWatchlistImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/auctions/$auctionId/edit': {
      id: '/auctions/$auctionId/edit'
      path: '/edit'
      fullPath: '/auctions/$auctionId/edit'
      preLoaderRoute: typeof AuctionsAuctionIdEditImport
      parentRoute: typeof AuctionsAuctionIdImport
    }
    '/auctions/$auctionId/': {
      id: '/auctions/$auctionId/'
      path: '/'
      fullPath: '/auctions/$auctionId/'
      preLoaderRoute: typeof AuctionsAuctionIdIndexImport
      parentRoute: typeof AuctionsAuctionIdImport
    }
    '/dashboard/auctions/': {
      id: '/dashboard/auctions/'
      path: '/auctions'
      fullPath: '/dashboard/auctions'
      preLoaderRoute: typeof DashboardAuctionsIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardSellRoute: typeof DashboardSellRoute
  DashboardSummaryRoute: typeof DashboardSummaryRoute
  DashboardWatchlistRoute: typeof DashboardWatchlistRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAuctionsIndexRoute: typeof DashboardAuctionsIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardSellRoute: DashboardSellRoute,
  DashboardSummaryRoute: DashboardSummaryRoute,
  DashboardWatchlistRoute: DashboardWatchlistRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAuctionsIndexRoute: DashboardAuctionsIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface AuctionsAuctionIdRouteChildren {
  AuctionsAuctionIdEditRoute: typeof AuctionsAuctionIdEditRoute
  AuctionsAuctionIdIndexRoute: typeof AuctionsAuctionIdIndexRoute
}

const AuctionsAuctionIdRouteChildren: AuctionsAuctionIdRouteChildren = {
  AuctionsAuctionIdEditRoute: AuctionsAuctionIdEditRoute,
  AuctionsAuctionIdIndexRoute: AuctionsAuctionIdIndexRoute,
}

const AuctionsAuctionIdRouteWithChildren =
  AuctionsAuctionIdRoute._addFileChildren(AuctionsAuctionIdRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auctions/$auctionId': typeof AuctionsAuctionIdRouteWithChildren
  '/dashboard/sell': typeof DashboardSellRoute
  '/dashboard/summary': typeof DashboardSummaryRoute
  '/dashboard/watchlist': typeof DashboardWatchlistRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auctions/$auctionId/edit': typeof AuctionsAuctionIdEditRoute
  '/auctions/$auctionId/': typeof AuctionsAuctionIdIndexRoute
  '/dashboard/auctions': typeof DashboardAuctionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard/sell': typeof DashboardSellRoute
  '/dashboard/summary': typeof DashboardSummaryRoute
  '/dashboard/watchlist': typeof DashboardWatchlistRoute
  '/dashboard': typeof DashboardIndexRoute
  '/auctions/$auctionId/edit': typeof AuctionsAuctionIdEditRoute
  '/auctions/$auctionId': typeof AuctionsAuctionIdIndexRoute
  '/dashboard/auctions': typeof DashboardAuctionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auctions/$auctionId': typeof AuctionsAuctionIdRouteWithChildren
  '/dashboard/sell': typeof DashboardSellRoute
  '/dashboard/summary': typeof DashboardSummaryRoute
  '/dashboard/watchlist': typeof DashboardWatchlistRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auctions/$auctionId/edit': typeof AuctionsAuctionIdEditRoute
  '/auctions/$auctionId/': typeof AuctionsAuctionIdIndexRoute
  '/dashboard/auctions/': typeof DashboardAuctionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/auctions/$auctionId'
    | '/dashboard/sell'
    | '/dashboard/summary'
    | '/dashboard/watchlist'
    | '/dashboard/'
    | '/auctions/$auctionId/edit'
    | '/auctions/$auctionId/'
    | '/dashboard/auctions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/dashboard/sell'
    | '/dashboard/summary'
    | '/dashboard/watchlist'
    | '/dashboard'
    | '/auctions/$auctionId/edit'
    | '/auctions/$auctionId'
    | '/dashboard/auctions'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dashboard'
    | '/auctions/$auctionId'
    | '/dashboard/sell'
    | '/dashboard/summary'
    | '/dashboard/watchlist'
    | '/dashboard/'
    | '/auctions/$auctionId/edit'
    | '/auctions/$auctionId/'
    | '/dashboard/auctions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuctionsAuctionIdRoute: typeof AuctionsAuctionIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuctionsAuctionIdRoute: AuctionsAuctionIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dashboard",
        "/auctions/$auctionId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/sell",
        "/dashboard/summary",
        "/dashboard/watchlist",
        "/dashboard/",
        "/dashboard/auctions/"
      ]
    },
    "/auctions/$auctionId": {
      "filePath": "auctions/$auctionId.tsx",
      "children": [
        "/auctions/$auctionId/edit",
        "/auctions/$auctionId/"
      ]
    },
    "/dashboard/sell": {
      "filePath": "dashboard/sell.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/summary": {
      "filePath": "dashboard/summary.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/watchlist": {
      "filePath": "dashboard/watchlist.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/auctions/$auctionId/edit": {
      "filePath": "auctions/$auctionId.edit.tsx",
      "parent": "/auctions/$auctionId"
    },
    "/auctions/$auctionId/": {
      "filePath": "auctions/$auctionId.index.tsx",
      "parent": "/auctions/$auctionId"
    },
    "/dashboard/auctions/": {
      "filePath": "dashboard/auctions.index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
